// <auto-generated />
using System;
using ExamProgramAPI.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamProgramAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240420152733_mig_1")]
    partial class mig_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamProgramAPI.DbEntities.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LessonCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("char");

                    b.Property<decimal>("Mark")
                        .HasColumnType("numeric(1,0)");

                    b.Property<decimal>("StudentNumber")
                        .HasColumnType("numeric(5,0)");

                    b.HasKey("ExamId");

                    b.HasIndex("LessonCode");

                    b.HasIndex("StudentNumber");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("ExamProgramAPI.DbEntities.Lesson", b =>
                {
                    b.Property<string>("LessonCode")
                        .HasMaxLength(3)
                        .HasColumnType("char");

                    b.Property<decimal>("Class")
                        .HasColumnType("numeric(2,0)");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("LessonCode");

                    b.HasIndex("TeacherId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("ExamProgramAPI.DbEntities.Student", b =>
                {
                    b.Property<decimal>("StudentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(5,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("StudentNumber"));

                    b.Property<decimal>("Class")
                        .HasColumnType("numeric(2,0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("StudentNumber");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ExamProgramAPI.DbEntities.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("ExamProgramAPI.DbEntities.Exam", b =>
                {
                    b.HasOne("ExamProgramAPI.DbEntities.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamProgramAPI.DbEntities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExamProgramAPI.DbEntities.Lesson", b =>
                {
                    b.HasOne("ExamProgramAPI.DbEntities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
